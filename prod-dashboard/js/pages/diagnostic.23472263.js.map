{"version":3,"sources":["webpack:///./shell/pages/diagnostic.vue?5228","webpack:///shell/pages/diagnostic.vue","webpack:///./shell/pages/diagnostic.vue?24e1","webpack:///./shell/pages/diagnostic.vue","webpack:///./shell/pages/diagnostic.vue?bf9a"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","on","gatherResponseTimes","promptDownload","_v","_s","t","_m","_l","item","objKey","key","value","label","_e","count","clusterCount","cluster","id","$event","toggleTable","name","namespace","sumResourceCount","counts","nodeCount","class","isTableVisible","directives","rawName","expression","resource","durationMs","logEntry","generateKey","timestamp","type","arg","i","staticRenderFns","layout","components","AsyncButton","PromptModal","fetch","provClusters","readyClusters","clusterForCounts","filterHiddenLocalCluster","finalCounts","promises","topTenForResponseTime","capiId","url","Promise","countsPerCluster","Object","sanitizedCount","data","window","userAgent","userAgentData","language","cookieEnabled","hardwareConcurrency","deviceMemory","browser","system","jsMemory","systemInformation","platform","jsHeapSizeLimit","totalJSHeapSize","usedJSHeapSize","responseTimes","includeResponseTimes","storeMapping","latestLogs","watch","computed","methods","scrollLogsToBottom","logsContainer","downloadData","btnCb","logs","resourceCounts","downloadFile","then","catch","setResourceResponseTiming","area","outcome","parseStoreData","rootStore","cleanRootStore","store","types","otherProps","component","componentProps"],"mappings":"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","file":"js/pages/diagnostic.23472263.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"title-block mt-20 mb-40\"},[_c('div',[_c('AsyncButton',{staticClass:\"mr-20\",attrs:{\"mode\":\"timing\"},on:{\"click\":_vm.gatherResponseTimes}}),_c('AsyncButton',{attrs:{\"mode\":\"diagnostic\"},on:{\"click\":_vm.promptDownload}})],1)]),_c('div',{staticClass:\"mb-40\"},[_c('h2',{staticClass:\"mb-20\"},[_vm._v(\" \"+_vm._s(_vm.t('about.diagnostic.systemInformation.subtitle'))+\" \")]),_c('table',{staticClass:\"full-width\"},[_vm._m(0),_c('tbody',_vm._l((_vm.systemInformation),function(item,objKey){return _c('tr',{key:objKey},[(item.value.length)?[_c('td',[_vm._v(_vm._s(item.label))]),_c('td',[_vm._v(_vm._s(item.value))])]:_vm._e()],2)}),0)])]),_c('div',{staticClass:\"mb-40\"},[_c('h2',{staticClass:\"mb-20\"},[_vm._v(\" \"+_vm._s(_vm.t('about.diagnostic.resourceCounts', { count: _vm.clusterCount }))+\" \")]),_c('div',{staticClass:\"resources-count-container\"},_vm._l((_vm.finalCounts),function(cluster){return _c('table',{key:cluster.id,staticClass:\"full-width\"},[_c('thead',{on:{\"click\":function($event){return _vm.toggleTable(cluster.id)}}},[_c('th',{attrs:{\"colspan\":\"4\"}},[_c('div',{staticClass:\"cluster-row\"},[_c('span',[_vm._v(\"Cluster: \"),_c('b',[_vm._v(_vm._s(cluster.name))])]),_c('span',[_vm._v(\"Namespace: \"),_c('b',[_vm._v(_vm._s(cluster.namespace))])]),_c('span',[_vm._v(\"Total Resources: \"),_c('b',[_vm._v(_vm._s(_vm.sumResourceCount(cluster.counts)))])]),_c('span',[_vm._v(\"Nodes: \"),_c('b',[_vm._v(_vm._s(_vm.nodeCount(cluster.counts)))])]),_c('i',{staticClass:\"icon\",class:{\n                  'icon-chevron-down': !cluster.isTableVisible,\n                  'icon-chevron-up': cluster.isTableVisible\n                }})])])]),_c('tbody',{directives:[{name:\"show\",rawName:\"v-show\",value:(cluster.isTableVisible),expression:\"cluster.isTableVisible\"}]},[_vm._m(1,true),_vm._l((cluster.counts),function(item){return _c('tr',{key:item.resource},[(item.count > 0)?[_c('td',{attrs:{\"scope\":\"row\"}},[_vm._v(\" \"+_vm._s(item.resource)+\" \")]),_c('td',[_vm._v(_vm._s(item.count))]),_c('td',[_vm._v(_vm._s(item.durationMs || '-'))])]:_vm._e()],2)})],2)])}),0)]),_c('div',{staticClass:\"mb-40\"},[_c('h2',{staticClass:\"mb-20\"},[_vm._v(\" \"+_vm._s(_vm.t('about.diagnostic.logs.subtitle'))+\" \")]),_c('ul',{staticClass:\"logs-container\"},_vm._l((_vm.latestLogs),function(logEntry){return _c('li',{key:_vm.generateKey(logEntry.timestamp),class:logEntry.type},[_c('span',{staticClass:\"log-entry-type\"},[_vm._v(_vm._s(logEntry.type)+\" :: \")]),_vm._l((logEntry.data),function(arg,i){return _c('span',{key:i},[_vm._v(_vm._s(arg))])})],2)}),0)]),_c('PromptModal')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('tr',[_c('th',[_vm._v(\"Type\")]),_c('th',[_vm._v(\"Value\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th',[_vm._v(\" Resource \")]),_c('th',[_vm._v(\" Count \")]),_c('th',[_vm._v(\" Resource Timing (ms) \")])])}]\n\nexport { render, staticRenderFns }","<script>\nimport { CAPI, MANAGEMENT } from '@shell/config/types';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport PromptModal from '@shell/components/PromptModal';\nimport { downloadFile } from '@shell/utils/download';\nimport { filterOnlyKubernetesClusters, filterHiddenLocalCluster } from '@shell/utils/cluster';\nimport { sortBy } from '@shell/utils/sort';\n\nexport default {\n  name:   'Diagnostic',\n  layout: 'plain',\n\n  components: { AsyncButton, PromptModal },\n\n  async fetch() {\n    const provClusters = await this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER });\n    const readyClusters = provClusters.filter(c => c.mgmt?.isReady);\n    const clusterForCounts = filterHiddenLocalCluster(filterOnlyKubernetesClusters(readyClusters), this.$store);\n    const finalCounts = [];\n    const promises = [];\n    let topTenForResponseTime = [];\n\n    clusterForCounts.forEach((cluster, i) => {\n      // Necessary to retrieve the proper display name of the cluster\n      const mgmtCluster = this.$store.getters['management/byId'](MANAGEMENT.CLUSTER, cluster.metadata.name);\n\n      finalCounts.push({\n        id:             cluster.id,\n        name:           mgmtCluster?.spec?.displayName || cluster.metadata?.name,\n        namespace:      cluster.metadata?.namespace,\n        capiId:         cluster.mgmt?.id,\n        counts:         null,\n        isTableVisible: !!(i === 0 && clusterForCounts.length === 1)\n      });\n      promises.push(this.$store.dispatch('management/request', { url: `/k8s/clusters/${ cluster.mgmt?.id }/v1/counts` }));\n    });\n\n    const countsPerCluster = await Promise.all(promises);\n\n    countsPerCluster.forEach((clusterCount, index) => {\n      const counts = clusterCount.data?.[0]?.counts;\n\n      if (counts) {\n        const sanitizedCount = [];\n\n        Object.keys(counts).forEach((key) => {\n          sanitizedCount[key] = counts[key].summary?.count;\n          sanitizedCount.push({\n            resource: key,\n            count:    counts[key].summary?.count || 0,\n          });\n        });\n\n        const sortedCount = sortBy(sanitizedCount, 'count:desc');\n\n        topTenForResponseTime = topTenForResponseTime.concat(sortedCount);\n        topTenForResponseTime = sortBy(topTenForResponseTime, 'count:desc');\n        topTenForResponseTime = topTenForResponseTime.splice(0, 15);\n\n        topTenForResponseTime.forEach((item, i) => {\n          topTenForResponseTime[i].id = finalCounts[index].id;\n          topTenForResponseTime[i].capiId = finalCounts[index].capiId;\n        });\n\n        finalCounts[index].counts = sortedCount;\n      }\n    });\n\n    this.topTenForResponseTime = topTenForResponseTime;\n    this.finalCounts = finalCounts;\n  },\n\n  data() {\n    const {\n      userAgent,\n      userAgentData,\n      language,\n      cookieEnabled,\n      hardwareConcurrency,\n      deviceMemory\n    } = window?.navigator;\n\n    const systemInformation = {\n      browser: {\n        label: this.t('about.diagnostic.systemInformation.browser'),\n        value: this.t('about.diagnostic.systemInformation.browserInfo', {\n          userAgent, language, cookieEnabled\n        })\n      },\n      system: {\n        label: this.t('about.diagnostic.systemInformation.system'),\n        value: this.t('about.diagnostic.systemInformation.hardwareConcurrency', { hardwareConcurrency })\n      },\n      jsMemory: {\n        label: this.t('about.diagnostic.systemInformation.jsMemory'),\n        value: ''\n      }\n    };\n\n    if ( userAgentData?.platform ) {\n      systemInformation.system.value = systemInformation.system.value.concat(', ', this.t('about.diagnostic.systemInformation.os', { platform: userAgentData.platform }));\n    }\n\n    if ( deviceMemory ) {\n      systemInformation.system.value = systemInformation.system.value.concat(', ', this.t('about.diagnostic.systemInformation.deviceMemory', { deviceMemory }));\n    }\n\n    if ( window?.performance?.memory?.jsHeapSizeLimit ) {\n      systemInformation.jsMemory.value += this.t('about.diagnostic.systemInformation.memJsHeapLimit', { jsHeapSizeLimit: window?.performance?.memory?.jsHeapSizeLimit });\n    }\n\n    if ( window?.performance?.memory?.totalJSHeapSize ) {\n      systemInformation.jsMemory.value += `, ${ this.t('about.diagnostic.systemInformation.memTotalJsHeapSize', { totalJSHeapSize: window?.performance?.memory?.totalJSHeapSize }) }`;\n    }\n\n    if ( window?.performance?.memory?.usedJSHeapSize ) {\n      systemInformation.jsMemory.value += `, ${ this.t('about.diagnostic.systemInformation.memUsedJsHeapSize', { usedJSHeapSize: window?.performance?.memory?.usedJSHeapSize }) }`;\n    }\n\n    // scroll logs container to the bottom\n    this.scrollLogsToBottom();\n\n    return {\n      systemInformation,\n      topTenForResponseTime: null,\n      responseTimes:         null,\n      finalCounts:           null,\n      includeResponseTimes:  true,\n      storeMapping:          this.$store?._modules?.root?.state,\n      latestLogs:            console.logs // eslint-disable-line no-console\n    };\n  },\n\n  watch: {\n    latestLogs() {\n      this.scrollLogsToBottom();\n    }\n  },\n\n  computed: {\n    clusterCount() {\n      return this.finalCounts?.length;\n    }\n  },\n\n  methods: {\n    scrollLogsToBottom() {\n      this.$nextTick(() => {\n        const logsContainer = document.querySelector('.logs-container');\n\n        logsContainer.scrollTop = logsContainer.scrollHeight;\n      });\n    },\n\n    generateKey(data) {\n      const randomize = Math.random() * 10000;\n\n      return `key_${ randomize }_${ data }`;\n    },\n\n    downloadData(btnCb) {\n      const date = new Date().toLocaleDateString();\n      const time = new Date().toLocaleTimeString();\n      const fileName = `rancher-diagnostic-data-${ date }-${ time.replaceAll(':', '_') }.json`;\n      const data = {\n        systemInformation: this.systemInformation,\n        logs:              this.latestLogs,\n        storeMapping:      this.parseStoreData(this.storeMapping),\n        resourceCounts:    this.finalCounts,\n        responseTimes:     this.responseTimes\n      };\n\n      downloadFile(fileName, JSON.stringify(data), 'application/json')\n        .then(() => btnCb(true))\n        .catch(() => btnCb(false));\n    },\n\n    setResourceResponseTiming(responseTimes) {\n      responseTimes?.forEach((res) => {\n        if ( res.outcome === 'success' ) {\n          const cluster = this.finalCounts.find(c => c.capiId === res.item.capiId);\n          const countIndex = cluster?.counts?.findIndex(c => c.resource === res.item.resource);\n\n          if ( (countIndex && countIndex !== -1) || countIndex === 0 ) {\n            this.$set(cluster?.counts[countIndex], 'durationMs', res.durationMs);\n          }\n        }\n      });\n    },\n\n    sumResourceCount(counts) {\n      return counts.reduce((a, b) => (a + b.count), 0);\n    },\n\n    nodeCount(counts) {\n      const resource = counts.findIndex(c => c.resource === 'node');\n\n      return counts[resource]?.count;\n    },\n\n    toggleTable(area) {\n      const itemIndex = this.finalCounts.findIndex(item => item.id === area);\n\n      this.finalCounts[itemIndex].isTableVisible = !this.finalCounts[itemIndex].isTableVisible;\n    },\n\n    async gatherResponseTimes(btnCb) {\n      return await Promise.all(this.topTenForResponseTime.map((item) => {\n        const t = Date.now();\n\n        return this.$store.dispatch('management/request', { url: `/k8s/clusters/${ item.capiId }/v1/${ item.resource }` })\n          .then(() => ({\n            outcome: 'success', item, durationMs: Date.now() - t\n          }))\n          .catch(() => ({\n            outcome: 'error', item, durationMs: Date.now() - t\n          }));\n      })).then((responseTimes) => {\n        this.responseTimes = responseTimes;\n        this.setResourceResponseTiming(responseTimes);\n        btnCb(true);\n      }).catch(() => btnCb(false));\n    },\n\n    parseStoreData(rootStore) {\n      // clear potential sensitive data\n      const disallowedDataKeys = [\n        'aws',\n        'digitalocean',\n        'linode',\n      ];\n\n      const clearListsKeys = [\n        'management',\n        'rancher',\n        'cluster',\n        'harvester',\n        'epinio',\n        'elemental',\n      ];\n\n      const cleanRootStore = {};\n\n      Object.entries(rootStore).forEach(([storeKey, store]) => {\n        if (disallowedDataKeys.includes(storeKey)) {\n          // Ignore any root store in the disallowed list\n          return;\n        }\n\n        // Remove all `list` keys, for example `management.types['management.cattle.io.cluster'].list`\n\n        if (!clearListsKeys.includes(storeKey)) {\n          // This is only done for some store namespaces, if not just save the raw entry\n          cleanRootStore[storeKey] = store;\n\n          return;\n        }\n\n        // if there's no types property to clear, just save the raw entry\n        if (!Object.keys(store.types || {}).length) {\n          cleanRootStore[storeKey] = store;\n\n          return;\n        }\n\n        // Save the root entry with empty types prop\n        cleanRootStore[storeKey] = {\n          ...store,\n          types: {},\n        };\n\n        // Save the root entries type's entries without the list property\n        Object.entries(store.types).forEach(([type, entry]) => {\n          const { list, ...otherProps } = entry;\n\n          cleanRootStore[storeKey].types[type] = {\n            ...otherProps,\n            count: list.length,\n          };\n        });\n      });\n\n      return cleanRootStore;\n    },\n\n    promptDownload(btnCb) {\n      if ( !this.responseTimes ) {\n        this.$store.dispatch('management/promptModal', {\n          component:      'DiagnosticTimingsDialog',\n          componentProps: {\n            downloadData:        this.downloadData,\n            gatherResponseTimes: this.gatherResponseTimes\n          }\n        })\n          .then(() => btnCb(true))\n          .catch(() => btnCb(false));\n      } else {\n        this.downloadData(btnCb);\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"title-block mt-20 mb-40\">\n      <div>\n        <AsyncButton\n          mode=\"timing\"\n          class=\"mr-20\"\n          @click=\"gatherResponseTimes\"\n        />\n        <AsyncButton\n          mode=\"diagnostic\"\n          @click=\"promptDownload\"\n        />\n      </div>\n    </div>\n\n    <!-- System info -->\n    <div class=\"mb-40\">\n      <h2 class=\"mb-20\">\n        {{ t('about.diagnostic.systemInformation.subtitle') }}\n      </h2>\n      <table class=\"full-width\">\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr\n            v-for=\"(item, objKey) in systemInformation\"\n            :key=\"objKey\"\n          >\n            <template v-if=\"item.value.length\">\n              <td>{{ item.label }}</td>\n              <td>{{ item.value }}</td>\n            </template>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <!-- Resources -->\n    <div class=\"mb-40\">\n      <h2 class=\"mb-20\">\n        {{ t('about.diagnostic.resourceCounts', { count: clusterCount }) }}\n      </h2>\n      <div class=\"resources-count-container\">\n        <table\n          v-for=\"cluster in finalCounts\"\n          :key=\"cluster.id\"\n          class=\"full-width\"\n        >\n          <thead @click=\"toggleTable(cluster.id)\">\n            <th colspan=\"4\">\n              <div class=\"cluster-row\">\n                <span>Cluster: <b>{{ cluster.name }}</b></span>\n                <span>Namespace: <b>{{ cluster.namespace }}</b></span>\n                <span>Total Resources: <b>{{ sumResourceCount(cluster.counts) }}</b></span>\n                <span>Nodes: <b>{{ nodeCount(cluster.counts) }}</b></span>\n                <i\n                  class=\"icon\"\n                  :class=\"{\n                    'icon-chevron-down': !cluster.isTableVisible,\n                    'icon-chevron-up': cluster.isTableVisible\n                  }\"\n                />\n              </div>\n            </th>\n          </thead>\n          <tbody v-show=\"cluster.isTableVisible\">\n            <tr>\n              <th>\n                Resource\n              </th>\n              <th>\n                Count\n              </th>\n              <th>\n                Resource Timing (ms)\n              </th>\n            </tr>\n\n            <tr\n              v-for=\"item in cluster.counts\"\n              :key=\"item.resource\"\n            >\n              <template v-if=\"item.count > 0\">\n                <td scope=\"row\">\n                  {{ item.resource }}\n                </td>\n                <td>{{ item.count }}</td>\n                <td>{{ item.durationMs || '-' }}</td>\n              </template>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n\n    <!-- Logs -->\n    <div class=\"mb-40\">\n      <h2 class=\"mb-20\">\n        {{ t('about.diagnostic.logs.subtitle') }}\n      </h2>\n      <ul class=\"logs-container\">\n        <li\n          v-for=\"logEntry in latestLogs\"\n          :key=\"generateKey(logEntry.timestamp)\"\n          :class=\"logEntry.type\"\n        >\n          <span class=\"log-entry-type\">{{ logEntry.type }} :: </span>\n          <span\n            v-for=\"(arg, i) in logEntry.data\"\n            :key=\"i\"\n          >{{ arg }}</span>\n        </li>\n      </ul>\n    </div>\n\n    <PromptModal />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.title-block {\n  display: flex;\n  justify-content: right;\n  align-items: center;\n\n  h1 {\n    margin: 0 !important;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n}\n\ntable {\n  border-collapse: collapse;\n  overflow: hidden;\n  border-radius: var(--border-radius);\n\n  &.full-width {\n    border-radius: 0 !important;\n    min-width: 60%;\n\n    thead {\n      cursor: pointer;\n\n      th div {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n      }\n    }\n\n    tbody {\n      border-bottom: 1px solid var(--sortable-table-top-divider);\n    }\n  }\n\n  tr > td:first-of-type {\n    width: 20%;\n  }\n\n  th, td {\n    border: 1px solid var(--border);\n    padding: 8px 5px;\n    min-width: 150px;\n    text-align: left;\n  }\n\n  th {\n    background-color: var(--sortable-table-top-divider);\n    border-bottom: 1px solid var(--sortable-table-header-bg);\n  }\n\n  a {\n    cursor: pointer;\n  }\n\n  .os {\n    display: flex;\n    align-items: center;\n  }\n}\n\n.logs-container {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  background-color: #FFF;\n  border: 1px solid var(--body-text);\n  height: 300px;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  li {\n    font-family: $mono-font;\n    font-size: 12px;\n    margin: 0;\n    padding: 10px 20px;\n    border-bottom: 1px solid #ccc;\n\n    &.log {\n      color: #000;\n    }\n\n    &.warn {\n      background-color: LightGoldenRodYellow;\n      color: SaddleBrown;\n    }\n\n    &.info {\n      background-color: Azure;\n      color: blue;\n    }\n\n    &.error {\n      background-color: MistyRose;\n      color: red;\n    }\n\n    &:last-child {\n      border-bottom: none;\n    }\n\n    .log-entry-type {\n      font-weight: bold;\n    }\n  }\n}\n\n.resources-count-container {\n  .cluster-row {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr) 20px;\n    grid-template-rows: 1fr;\n    align-content: center;\n    font-weight: normal;\n  }\n\n  tbody tr, tbody tr th {\n    background-color: var(--sortable-table-header-bg);\n  }\n\n  tbody tr th {\n    border-bottom: 1px solid var(--sortable-table-top-divider);\n  }\n\n  tbody tr:hover {\n    background-color: var(--sortable-table-top-divider);\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../node_modules/babel-loader/lib/index.js??ref--16-1!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./diagnostic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../node_modules/babel-loader/lib/index.js??ref--16-1!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./diagnostic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./diagnostic.vue?vue&type=template&id=27a17022&scoped=true&\"\nimport script from \"./diagnostic.vue?vue&type=script&lang=js&\"\nexport * from \"./diagnostic.vue?vue&type=script&lang=js&\"\nimport style0 from \"./diagnostic.vue?vue&type=style&index=0&id=27a17022&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"27a17022\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./diagnostic.vue?vue&type=style&index=0&id=27a17022&prod&lang=scss&scoped=true&\""],"sourceRoot":""}