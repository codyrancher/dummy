{"version":3,"sources":["webpack:///./shell/pages/c/_cluster/uiplugins/InstallDialog.vue?9a96","webpack:///shell/pages/c/_cluster/uiplugins/InstallDialog.vue","webpack:///./shell/pages/c/_cluster/uiplugins/InstallDialog.vue?bccb","webpack:///./shell/pages/c/_cluster/uiplugins/InstallDialog.vue","webpack:///./shell/pages/c/_cluster/uiplugins/InstallDialog.vue?1044"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","_s","t","mode","name","plugin","label","certified","_e","versionOptions","model","value","callback","$$v","version","expression","busy","on","$event","closeDialog","buttonMode","install","staticRenderFns","components","AsyncButton","Banner","LabeledSelect","fetch","type","id","data","currentVersion","defaultRegistrySetting","update","computed","showVersionSelector","methods","showDialog","result","isRancherImage","repoType","repoName","chartName","versionName","chartVersionInfo","image","exists","opt","force","app","repo","chart","releaseName","annotations","CATALOG_ANNOTATIONS","values","defaultRegistry","input","charts","namespace","action","res","operationId","title","message","timeout","root","component"],"mappings":"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","file":"js/pages/c/_cluster/uiplugins/InstallDialog.735718c2.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('modal',{attrs:{\"name\":\"installPluginDialog\",\"height\":\"auto\",\"scrollable\":true}},[(_vm.plugin)?_c('div',{staticClass:\"plugin-install-dialog\"},[_c('h4',{staticClass:\"mt-10\"},[_vm._v(\" \"+_vm._s(_vm.t((\"plugins.\" + _vm.mode + \".title\"), { name: _vm.plugin.label }))+\" \")]),_c('div',{staticClass:\"custom mt-10\"},[_c('div',{staticClass:\"dialog-panel\"},[_c('p',[_vm._v(\" \"+_vm._s(_vm.t((\"plugins.\" + _vm.mode + \".prompt\")))+\" \")]),(!_vm.plugin.certified)?_c('Banner',{attrs:{\"color\":\"warning\",\"label\":_vm.t('plugins.install.warnNotCertified')}}):_vm._e(),(_vm.showVersionSelector)?_c('LabeledSelect',{staticClass:\"version-selector mt-10\",attrs:{\"label-key\":\"plugins.install.version\",\"options\":_vm.versionOptions,\"data-testid\":\"install-ext-modal-select-version\"},model:{value:(_vm.version),callback:function ($$v) {_vm.version=$$v},expression:\"version\"}}):_c('div',[_vm._v(\" \"+_vm._s(_vm.t('plugins.install.version'))+\" \"+_vm._s(_vm.version)+\" \")])],1),_c('div',{staticClass:\"dialog-buttons\"},[_c('button',{staticClass:\"btn role-secondary\",attrs:{\"disabled\":_vm.busy,\"data-testid\":\"install-ext-modal-cancel-btn\"},on:{\"click\":function($event){return _vm.closeDialog(false)}}},[_vm._v(\" \"+_vm._s(_vm.t('generic.cancel'))+\" \")]),_c('AsyncButton',{attrs:{\"mode\":_vm.buttonMode,\"data-testid\":\"install-ext-modal-install-btn\"},on:{\"click\":_vm.install}})],1)])]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport AsyncButton from '@shell/components/AsyncButton';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { CATALOG, MANAGEMENT } from '@shell/config/types';\nimport { CATALOG as CATALOG_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport { UI_PLUGIN_NAMESPACE } from '@shell/config/uiplugins';\nimport Banner from '@components/Banner/Banner.vue';\n\n// Note: This dialog handles installation and update of a plugin\n\nexport default {\n  components: {\n    AsyncButton,\n    Banner,\n    LabeledSelect,\n  },\n\n  async fetch() {\n    this.defaultRegistrySetting = await this.$store.dispatch('management/find', {\n      type: MANAGEMENT.SETTING,\n      id:   'system-default-registry'\n    });\n  },\n\n  data() {\n    return {\n      currentVersion:         '',\n      defaultRegistrySetting: null,\n      plugin:                 undefined,\n      busy:                   false,\n      version:                '',\n      update:                 false,\n      mode:                   '',\n    };\n  },\n\n  computed: {\n    showVersionSelector() {\n      return this.versionOptions?.length > 1;\n    },\n\n    versionOptions() {\n      if (!this.plugin) {\n        return [];\n      }\n\n      // Don't allow update/rollback to current version\n      const versions = this.plugin?.installableVersions?.filter((v) => {\n        if (this.currentVersion) {\n          return v.version !== this.currentVersion;\n        }\n\n        return true;\n      });\n\n      return versions.map((version) => {\n        return {\n          label: version.version,\n          value: version.version,\n        };\n      });\n    },\n\n    buttonMode() {\n      return this.update ? 'update' : 'install';\n    }\n  },\n\n  methods: {\n    showDialog(plugin, mode) {\n      this.plugin = plugin;\n      this.mode = mode;\n\n      // Default to latest version on install (this is default on the plugin)\n      this.version = plugin.displayVersion;\n\n      if (mode === 'update') {\n        this.currentVersion = plugin.displayVersion;\n\n        // Update to latest version, so take the first version\n        if (plugin.installableVersions?.length > 0) {\n          this.version = plugin.installableVersions?.[0]?.version;\n        }\n      } else if (mode === 'rollback') {\n        // Find the newest version once we remove the current version\n        const versionNames = plugin.installableVersions.filter(v => v.version !== plugin.displayVersion);\n\n        this.currentVersion = plugin.displayVersion;\n\n        if (versionNames.length > 0) {\n          this.version = versionNames[0].version;\n        }\n      }\n\n      // Make sure we have the version available\n      const versionChart = plugin.installableVersions?.find(v => v.version === this.version);\n\n      if (!versionChart) {\n        this.version = plugin.installableVersions?.[0]?.version;\n      }\n\n      this.busy = false;\n      this.update = mode !== 'install';\n      this.$modal.show('installPluginDialog');\n    },\n\n    closeDialog(result) {\n      this.$modal.hide('installPluginDialog');\n      this.$emit('closed', result);\n    },\n\n    async install() {\n      this.busy = true;\n\n      const plugin = this.plugin;\n\n      this.$emit('update', plugin.name, 'install');\n\n      // Find the version that the user wants to install\n      const version = plugin.versions?.find(v => v.version === this.version);\n\n      if (!version) {\n        this.busy = false;\n\n        return;\n      }\n\n      // is the image used by the chart in the rancher org?\n      let isRancherImage = false;\n\n      try {\n        const chartVersionInfo = await this.$store.dispatch('catalog/getVersionInfo', {\n          repoType:    version.repoType,\n          repoName:    version.repoName,\n          chartName:   plugin.chart.chartName,\n          versionName: this.version,\n        });\n\n        const image = chartVersionInfo?.values?.image?.repository || '';\n\n        isRancherImage = image.startsWith('rancher/');\n      } catch (e) {}\n\n      // See if there is already a plugin with this name\n      let exists = false;\n\n      try {\n        const app = await this.$store.dispatch('management/find', {\n          type: CATALOG.APP,\n          id:   `${ UI_PLUGIN_NAMESPACE }/${ plugin.chart.chartName }`,\n          opt:  { force: true },\n        });\n\n        exists = !!app;\n      } catch (e) {}\n\n      const repoType = version.repoType;\n      const repoName = version.repoName;\n      const repo = this.$store.getters['catalog/repo']({ repoType, repoName });\n\n      const chart = {\n        chartName:   plugin.chart.chartName,\n        version:     this.version,\n        releaseName: plugin.chart.chartName,\n        annotations: {\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE]: plugin.repoType,\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_NAME]: plugin.repoName\n        },\n        values: {}\n      };\n\n      // Pass in the system default registry property if set - only if the image is in the rancher org\n      const defaultRegistry = this.defaultRegistrySetting?.value || '';\n\n      if (isRancherImage && defaultRegistry) {\n        chart.values.global = chart.values.global || {};\n        chart.values.global.cattle = chart.values.global.cattle || {};\n        chart.values.global.cattle.systemDefaultRegistry = defaultRegistry;\n      }\n\n      const input = {\n        charts:    [chart],\n        // timeout:   this.cmdOptions.timeout > 0 ? `${ this.cmdOptions.timeout }s` : null,\n        // wait:      this.cmdOptions.wait === true,\n        namespace: UI_PLUGIN_NAMESPACE,\n      };\n\n      // Helm action\n      const action = (exists || this.update) ? 'upgrade' : 'install';\n\n      try {\n        const res = await repo.doAction(action, input);\n        const operationId = `${ res.operationNamespace }/${ res.operationName }`;\n\n        this.closeDialog(plugin);\n\n        await repo.waitForOperation(operationId);\n\n        await this.$store.dispatch(`management/find`, {\n          type: CATALOG.OPERATION,\n          id:   operationId\n        });\n      } catch (e) {\n        this.$store.dispatch('growl/error', {\n          title:   this.t('plugins.error.generic'),\n          message: e.message ? e.message : e,\n          timeout: 10000\n        }, { root: true });\n\n        this.closeDialog(plugin);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <modal\n    name=\"installPluginDialog\"\n    height=\"auto\"\n    :scrollable=\"true\"\n  >\n    <div\n      v-if=\"plugin\"\n      class=\"plugin-install-dialog\"\n    >\n      <h4 class=\"mt-10\">\n        {{ t(`plugins.${ mode }.title`, { name: plugin.label }) }}\n      </h4>\n      <div class=\"custom mt-10\">\n        <div class=\"dialog-panel\">\n          <p>\n            {{ t(`plugins.${ mode }.prompt`) }}\n          </p>\n          <Banner\n            v-if=\"!plugin.certified\"\n            color=\"warning\"\n            :label=\"t('plugins.install.warnNotCertified')\"\n          />\n          <LabeledSelect\n            v-if=\"showVersionSelector\"\n            v-model=\"version\"\n            label-key=\"plugins.install.version\"\n            :options=\"versionOptions\"\n            class=\"version-selector mt-10\"\n            data-testid=\"install-ext-modal-select-version\"\n          />\n          <div v-else>\n            {{ t('plugins.install.version') }} {{ version }}\n          </div>\n        </div>\n        <div class=\"dialog-buttons\">\n          <button\n            :disabled=\"busy\"\n            class=\"btn role-secondary\"\n            data-testid=\"install-ext-modal-cancel-btn\"\n            @click=\"closeDialog(false)\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n          <AsyncButton\n            :mode=\"buttonMode\"\n            data-testid=\"install-ext-modal-install-btn\"\n            @click=\"install\"\n          />\n        </div>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<style lang=\"scss\" scoped>\n  .plugin-install-dialog {\n    padding: 10px;\n\n    h4 {\n      font-weight: bold;\n    }\n\n    .dialog-panel {\n      display: flex;\n      flex-direction: column;\n      min-height: 100px;\n\n      p {\n        margin-bottom: 5px;\n      }\n\n      .dialog-info {\n        flex: 1;\n      }\n\n      .toggle-advanced {\n        display: flex;\n        align-items: center;\n        cursor: pointer;\n        margin: 10px 0;\n\n        &:hover {\n          text-decoration: none;\n          color: var(--link);\n        }\n      }\n\n      .version-selector {\n        margin: 0 10px 10px 10px;\n        width: auto;\n      }\n    }\n\n    .dialog-buttons {\n      display: flex;\n      justify-content: flex-end;\n      margin-top: 10px;\n\n      > *:not(:last-child) {\n        margin-right: 10px;\n      }\n    }\n  }\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./InstallDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./InstallDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InstallDialog.vue?vue&type=template&id=0c3745a3&scoped=true&\"\nimport script from \"./InstallDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./InstallDialog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./InstallDialog.vue?vue&type=style&index=0&id=0c3745a3&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0c3745a3\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./InstallDialog.vue?vue&type=style&index=0&id=0c3745a3&prod&lang=scss&scoped=true&\""],"sourceRoot":""}