{"version":3,"sources":["webpack:///./shell/pages/c/_cluster/monitoring/route-receiver/index.vue?0931","webpack:///shell/pages/c/_cluster/monitoring/route-receiver/index.vue","webpack:///./shell/pages/c/_cluster/monitoring/route-receiver/index.vue?9424","webpack:///./shell/pages/c/_cluster/monitoring/route-receiver/index.vue","webpack:///./shell/pages/c/_cluster/monitoring/route-receiver/index.vue?2884"],"names":["render","_vm","this","_h","$createElement","_c","_self","$fetchState","staticClass","_v","_s","t","on","$event","$router","push","createRoute","attrs","ref","initTab","routeSchema","id","$store","getters","secretTo","routes","receiverSchema","receivers","staticRenderFns","name","components","Banner","Loading","ResourceTable","Tab","Tabbed","fetch","type","getSecret","secret","areSomeRoutesInvalidFormat","areRoutesSupportedFormat","match","isCreatable","data","computed","params","cluster","query","resource","component"],"mappings":"oLAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAQF,EAAIM,YAAmB,QAAEF,EAAG,WAAWA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACG,YAAY,oBAAoB,CAACH,EAAG,KAAK,CAACJ,EAAIQ,GAAG,IAAIR,EAAIS,GAAGT,EAAIU,EAAE,qCAAqCN,EAAG,MAAM,CAACA,EAAG,SAAS,CAACG,YAAY,sCAAsCI,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOZ,EAAIa,QAAQC,KAAKd,EAAIe,gBAAgB,CAACf,EAAIQ,GAAG,IAAIR,EAAIS,GAAGT,EAAIU,EAAE,6BAA6B,WAAWN,EAAG,MAAM,CAACG,YAAY,OAAO,CAACH,EAAG,SAAS,CAACY,MAAM,CAAC,MAAQ,OAAO,MAAQhB,EAAIU,EAAE,wDAAwD,GAAGN,EAAG,SAAS,CAACa,IAAI,OAAOD,MAAM,CAAC,cAAchB,EAAIkB,UAAU,CAACd,EAAG,MAAM,CAACY,MAAM,CAAC,KAAOhB,EAAImB,YAAYC,GAAG,MAAQpB,EAAIqB,OAAOC,QAAQ,qBAAqBtB,EAAImB,YAAa,KAAK,CAAEnB,EAAY,SAAEI,EAAG,MAAM,CAACJ,EAAIQ,GAAG,kFAAkFJ,EAAG,YAAY,CAACY,MAAM,CAAC,GAAKhB,EAAIuB,WAAW,CAACvB,EAAIQ,GAAG,YAAYR,EAAIQ,GAAG,0BAA0B,GAAGJ,EAAG,gBAAgB,CAACY,MAAM,CAAC,OAAShB,EAAImB,YAAY,KAAOnB,EAAIwB,WAAW,GAAGpB,EAAG,MAAM,CAACY,MAAM,CAAC,KAAOhB,EAAIyB,eAAeL,GAAG,MAAQpB,EAAIqB,OAAOC,QAAQ,qBAAqBtB,EAAIyB,eAAgB,KAAK,CAACrB,EAAG,gBAAgB,CAACY,MAAM,CAAC,OAAShB,EAAIyB,eAAe,KAAOzB,EAAI0B,cAAc,IAAI,IAAI,IAC5vCC,EAAkB,G,6yBCiBP,OACfC,iBACAC,YACAC,cACAC,eACAC,qBACAC,WACAC,eAGAC,MAVA,WAUA,2IACA,0EACA,gFAEAX,EAAA,qCAAAY,4BAJA,SAMA,qCAAAA,+BANA,cAMA,YANA,gBAQAC,kCARA,UAQAC,EARA,OASAC,EAAAC,mBAEAD,EAXA,wBAYA,4CAAAE,2BAAAC,iBAZA,UAaAlB,EAbA,QAaA,SAbA,+BAeA,4CAAAiB,2BAAAC,iBACA,kCACA,kDAjBA,+CAqBAC,KA/BA,WAgCA,0DAEA,OACAnB,UAAAE,aAAAH,cAAAJ,iBAAAM,oBAAAP,YAGA0B,UAEA7B,YAFA,WAEA,QACA,iHAEA,OACAa,kDACAiB,QAAAC,oCACAC,OAAAC,gBChE2X,I,wBCQvXC,EAAY,eACd,EACAlD,EACA4B,GACA,EACA,KACA,WACA,MAIa,aAAAsB,E,2CCnBf","file":"js/pages/c/_cluster/monitoring/route-receiver/index.7fbaee62.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.$fetchState.pending)?_c('Loading'):_c('div',[_c('div',{staticClass:\"row header mb-10\"},[_c('h1',[_vm._v(\" \"+_vm._s(_vm.t('monitoring.routesAndReceivers')))]),_c('div',[_c('button',{staticClass:\"btn btn-lg role-primary float right\",on:{\"click\":function($event){return _vm.$router.push(_vm.createRoute)}}},[_vm._v(\" \"+_vm._s(_vm.t('resourceList.head.create'))+\" \")])])]),_c('div',{staticClass:\"row\"},[_c('Banner',{attrs:{\"color\":\"info\",\"label\":_vm.t('monitoring.alertmanagerConfig.deprecationWarning')}})],1),_c('Tabbed',{ref:\"tabs\",attrs:{\"default-tab\":_vm.initTab}},[_c('Tab',{attrs:{\"name\":_vm.routeSchema.id,\"label\":_vm.$store.getters['type-map/labelFor'](_vm.routeSchema, 2)}},[(_vm.secretTo)?_c('div',[_vm._v(\" We don't support the current route format stored in alertmanager.yaml. Click \"),_c('nuxt-link',{attrs:{\"to\":_vm.secretTo}},[_vm._v(\" here \")]),_vm._v(\" to update manually. \")],1):_c('ResourceTable',{attrs:{\"schema\":_vm.routeSchema,\"rows\":_vm.routes}})],1),_c('Tab',{attrs:{\"name\":_vm.receiverSchema.id,\"label\":_vm.$store.getters['type-map/labelFor'](_vm.receiverSchema, 2)}},[_c('ResourceTable',{attrs:{\"schema\":_vm.receiverSchema,\"rows\":_vm.receivers}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\n/**\n * The Route and Receiver resources are deprecated. Going forward,\n * routes and receivers should be configured within AlertmanagerConfigs.\n * Any updates to receiver configuration forms, such as Slack/email/PagerDuty\n * etc, should be made to the receiver forms that are based on the\n * AlertmanagerConfig resource, which has a different API. The new forms are\n * located in @shell/edit/monitoring.coreos.com.alertmanagerconfig/types.\n */\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Loading from '@shell/components/Loading';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { Banner } from '@components/Banner';\nimport { MONITORING } from '@shell/config/types';\nimport { areRoutesSupportedFormat, getSecret } from '@shell/utils/alertmanagerconfig';\nimport { MODE, _EDIT } from '@shell/config/query-params';\n\nexport default {\n  name:       'ListRoute',\n  components: {\n    Banner,\n    Loading,\n    ResourceTable,\n    Tab,\n    Tabbed,\n  },\n\n  async fetch() {\n    this.routeSchema = this.$store.getters['cluster/schemaFor'](MONITORING.SPOOFED.ROUTE);\n    this.receiverSchema = this.$store.getters['cluster/schemaFor'](MONITORING.SPOOFED.RECEIVER);\n\n    const routes = this.$store.dispatch('cluster/findAll', { type: MONITORING.SPOOFED.ROUTE });\n\n    this.receivers = await this.$store.dispatch('cluster/findAll', { type: MONITORING.SPOOFED.RECEIVER });\n\n    const secret = await getSecret(this.$store.dispatch);\n    const areSomeRoutesInvalidFormat = areRoutesSupportedFormat(secret);\n\n    if (areSomeRoutesInvalidFormat) {\n      this.$store.dispatch('type-map/configureType', { match: MONITORING.SPOOFED.ROUTE, isCreatable: true });\n      this.routes = await routes;\n    } else {\n      this.$store.dispatch('type-map/configureType', { match: MONITORING.SPOOFED.ROUTE, isCreatable: false });\n      this.secretTo = { ...secret.detailLocation };\n      this.secretTo.query = { [MODE]: _EDIT };\n    }\n  },\n\n  data() {\n    const initTab = this.$route.query.resource || MONITORING.SPOOFED.RECEIVER;\n\n    return {\n      routes: [], receivers: [], secretTo: null, routeSchema: null, receiverSchema: null, initTab\n    };\n  },\n  computed: {\n\n    createRoute() {\n      const activeResource = this.$refs?.tabs?.activeTabName || this.routeSchema.id;\n\n      return {\n        name:   'c-cluster-monitoring-route-receiver-create',\n        params: { cluster: this.$route.params.cluster },\n        query:  { resource: activeResource }\n      };\n    },\n  },\n\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <div class=\"row header mb-10\">\n      <h1>  {{ t('monitoring.routesAndReceivers') }}</h1>\n      <div>\n        <button\n          class=\"btn btn-lg role-primary float right\"\n          @click=\"$router.push(createRoute)\"\n        >\n          {{ t('resourceList.head.create') }}\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <Banner\n        color=\"info\"\n        :label=\"t('monitoring.alertmanagerConfig.deprecationWarning')\"\n      />\n    </div>\n    <Tabbed\n      ref=\"tabs\"\n      :default-tab=\"initTab\"\n    >\n      <Tab\n        :name=\"routeSchema.id\"\n        :label=\"$store.getters['type-map/labelFor'](routeSchema, 2)\"\n      >\n        <div v-if=\"secretTo\">\n          We don't support the current route format stored in alertmanager.yaml. Click\n          <nuxt-link :to=\"secretTo\">\n            here\n          </nuxt-link> to update manually.\n        </div>\n        <ResourceTable\n          v-else\n          :schema=\"routeSchema\"\n          :rows=\"routes\"\n        />\n      </Tab>\n      <Tab\n        :name=\"receiverSchema.id\"\n        :label=\"$store.getters['type-map/labelFor'](receiverSchema, 2)\"\n      >\n        <ResourceTable\n          :schema=\"receiverSchema\"\n          :rows=\"receivers\"\n        />\n      </Tab>\n    </Tabbed>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.header{\n  display: flex;\n  H1{\n    flex: 1;\n  }\n}\n</style>\n","import mod from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=989e1d20&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=989e1d20&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"989e1d20\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=989e1d20&prod&lang=scss&scoped=true&\""],"sourceRoot":""}