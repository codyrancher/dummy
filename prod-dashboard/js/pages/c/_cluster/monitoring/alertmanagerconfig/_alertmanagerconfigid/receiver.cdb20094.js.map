{"version":3,"sources":["webpack:///./shell/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid/receiver.vue?b179","webpack:///shell/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid/receiver.vue","webpack:///./shell/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid/receiver.vue?67a0","webpack:///./shell/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid/receiver.vue","webpack:///./shell/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid/receiver.vue?048e"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","heading","viewOptions","mode","view","attrs","currentView","on","handleButtonGroupClick","_e","ref","handleReceiverActionMenuClick","yaml","alertmanagerConfigResource","resourceYaml","edit","JSON","stringify","redirectToReceiverDetail","receiverName","alertmanagerConfigDetailRoute","applyHooks","e","$emit","config","detail","receiverValue","alertmanagerConfigId","saveOverride","receiverActions","receiverActionMenuIsOpen","actionMenuTargetElement","actionMenuTargetEvent","$event","goToEdit","goToEditYaml","promptRemove","staticRenderFns","name","components","ActionMenu","ButtonGroup","ReceiverConfig","ResourceYaml","fetch","inStore","type","id","originalAlertmanagerConfigResource","resource","existingReceiverData","data","create","showPreview","labelKey","value","computed","editorMode","methods","buttonDone","msg","event","toggleReceiverActionMenu","actionData","redirectToAlertmanagerConfigDetail","component"],"mappings":"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","file":"js/pages/c/_cluster/monitoring/alertmanagerconfig/_alertmanagerconfigid/receiver.cdb20094.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('header',{staticClass:\"header\"},[_c('div',{staticClass:\"title\"},[_c('div',{staticClass:\"primaryheader\"},[_c('h1',[_vm._v(\" \"+_vm._s(_vm.heading)+\" \")])])]),_c('div',{staticClass:\"actions-container\"},[_c('div',{staticClass:\"actions\"},[(_vm.viewOptions && _vm.mode === _vm.view)?_c('ButtonGroup',{attrs:{\"value\":_vm.currentView,\"options\":_vm.viewOptions},on:{\"input\":_vm.handleButtonGroupClick}}):_vm._e(),(_vm.mode === _vm.view)?_c('button',{ref:\"actions\",staticClass:\"btn role-multi-action actions\",attrs:{\"aria-haspopup\":\"true\",\"type\":\"button\"},on:{\"click\":_vm.handleReceiverActionMenuClick}},[_c('i',{staticClass:\"icon icon-actions\"})]):_vm._e()],1)])]),(_vm.currentView === _vm.yaml && _vm.alertmanagerConfigResource)?_c('ResourceYaml',{ref:\"resourceyaml\",attrs:{\"value\":_vm.alertmanagerConfigResource,\"mode\":_vm.mode,\"initial-yaml-for-diff\":null,\"yaml\":_vm.resourceYaml,\"offer-preview\":_vm.mode === _vm.edit,\"done-route\":JSON.stringify(_vm.redirectToReceiverDetail(_vm.receiverName)),\"done-override\":_vm.alertmanagerConfigDetailRoute,\"apply-hooks\":_vm.alertmanagerConfigResource.applyHooks},on:{\"error\":function (e){ return _vm.$emit('error', e); }}}):_vm._e(),((_vm.currentView === _vm.config || _vm.currentView === _vm.detail) && _vm.alertmanagerConfigResource)?_c('ReceiverConfig',{ref:\"config\",attrs:{\"value\":_vm.receiverValue,\"mode\":_vm.mode,\"alertmanager-config-id\":_vm.alertmanagerConfigId,\"alertmanager-config-resource\":_vm.alertmanagerConfigResource,\"save-override\":_vm.saveOverride}}):_vm._e(),_c('ActionMenu',{attrs:{\"custom-actions\":_vm.receiverActions,\"open\":_vm.receiverActionMenuIsOpen,\"use-custom-target-element\":true,\"custom-target-element\":_vm.actionMenuTargetElement,\"custom-target-event\":_vm.actionMenuTargetEvent},on:{\"close\":function($event){_vm.receiverActionMenuIsOpen = false},\"goToEdit\":_vm.goToEdit,\"goToEditYaml\":_vm.goToEditYaml,\"promptRemove\":_vm.promptRemove}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport ActionMenu from '@shell/components/ActionMenu';\nimport ReceiverConfig from '@shell/edit/monitoring.coreos.com.alertmanagerconfig/receiverConfig';\nimport ButtonGroup from '@shell/components/ButtonGroup';\nimport ResourceYaml from '@shell/components/ResourceYaml';\nimport { createYaml } from '@shell/utils/create-yaml';\nimport { EDITOR_MODES } from '@shell/components/YamlEditor';\nimport { MONITORING, SCHEMA } from '@shell/config/types';\nimport {\n  _CREATE, _EDIT, _VIEW, _CONFIG, _YAML, _DETAIL\n} from '@shell/config/query-params';\n\nimport { clone } from '@shell/utils/object';\n\nexport default {\n  name:       'AlertmanagerConfigReceiverCreateEdit',\n  components: {\n    ActionMenu,\n    ButtonGroup,\n    ReceiverConfig,\n    ResourceYaml\n  },\n\n  async fetch() {\n    const inStore = this.$store.getters['currentProduct'].inStore;\n\n    this.receiverName = this.$route.query.receiverName;\n\n    const alertmanagerConfigId = this.$route.params.alertmanagerconfigid;\n    const originalAlertmanagerConfigResource = await this.$store.dispatch(`${ inStore }/find`, { type: MONITORING.ALERTMANAGERCONFIG, id: alertmanagerConfigId });\n    const alertmanagerConfigResource = await this.$store.dispatch(`${ inStore }/clone`, { resource: originalAlertmanagerConfigResource });\n    const mode = this.$route.query.mode;\n\n    if (mode !== _CREATE) {\n      const existingReceiverData = (alertmanagerConfigResource.spec.receivers || []).find((receiverData) => {\n        return receiverData.name === this.receiverName;\n      });\n\n      if (existingReceiverData) {\n        this.receiverValue = existingReceiverData;\n      }\n    }\n\n    this.alertmanagerConfigId = alertmanagerConfigResource.id;\n    this.alertmanagerConfigResource = alertmanagerConfigResource;\n    this.alertmanagerConfigDetailRoute = alertmanagerConfigResource._detailLocation;\n  },\n\n  // take edit link and edit request from AlertmanagerConfig resource\n  // and pass it to ReceiverConfig as a prop\n\n  data() {\n    return {\n      actionMenuTargetElement:       null,\n      actionMenuTargetEvent:         null,\n      alertmanagerConfigId:          '',\n      alertmanagerConfigResource:    null,\n      alertmanagerConfigDetailRoute: null,\n      config:                        _CONFIG,\n      create:                        _CREATE,\n      detail:                        _DETAIL,\n      edit:                          _EDIT,\n      receiverActionMenuIsOpen:      false,\n      receiverName:                  '',\n      receiverValue:                 {},\n      showPreview:                   false,\n      view:                          _VIEW,\n      viewOptions:                   [\n        {\n          labelKey: 'resourceDetail.masthead.config',\n          value:    'config',\n        }, {\n          labelKey: 'resourceDetail.masthead.yaml',\n          value:    _YAML,\n        }\n      ],\n      yaml: _YAML\n    };\n  },\n\n  computed: {\n    currentView() {\n      return this.$route.query.currentView;\n    },\n    receiverActions() {\n      const alertmanagerConfigActions = this.alertmanagerConfigResource?.availableActions;\n\n      if (!alertmanagerConfigActions) {\n        return [];\n      }\n\n      // Receivers are not a separate resource, so they\n      // should only have a subset of the AlertmanagerConfig\n      // actions. So we take AlertmanagerConfig's actions and filter\n      // out any that don't apply.\n      // Example action data:\n      // {\n      //     \"action\": \"goToEdit\",\n      //     \"label\": \"Edit Config\",\n      //     \"icon\": \"icon icon-edit\",\n      //     \"enabled\": true\n      // },\n      return this.alertmanagerConfigResource.getReceiverActions(alertmanagerConfigActions);\n    },\n    resourceYaml() {\n      const resource = this.alertmanagerConfigResource;\n\n      const inStore = this.$store.getters['currentStore'](resource);\n      const schemas = this.$store.getters[`${ inStore }/all`](SCHEMA);\n      const clonedResource = clone(resource);\n\n      const out = createYaml(schemas, MONITORING.ALERTMANAGERCONFIG, clonedResource);\n\n      return out;\n    },\n    mode() {\n      // Use the route as a dependency of the\n      // computed property so that the component\n      // updates when you navigate between edit\n      // and view.\n      return this.$route.query.mode;\n    },\n    editorMode() {\n      if ( this.mode === this.view ) {\n        return EDITOR_MODES.VIEW_CODE;\n      } else if ( this.showPreview ) {\n        return EDITOR_MODES.DIFF_CODE;\n      }\n\n      return EDITOR_MODES.EDIT_CODE;\n    },\n    heading() {\n      switch (this.$route.query.mode) {\n      case this.create:\n        return this.t('monitoring.alertmanagerConfig.receiverFormNames.create');\n      case this.edit:\n        if (this.currentView === this.yaml || this.$route.query.as === this.yaml) {\n          // When you edit as YAML, you edit the whole AlertmanagerConfig\n          // at once, so the header is just \"Edit AlertmanagerConfig\"\n          return this.t('monitoring.alertmanagerConfig.receiverFormNames.editYaml');\n        }\n\n        // When you edit as a form, you edit only the receiver,\n        // so the form header is \"Edit Receiver in AlertmanagerConfig\"\n        return this.t('monitoring.alertmanagerConfig.receiverFormNames.edit');\n\n      default:\n        return this.t('monitoring.alertmanagerConfig.receiverFormNames.detail');\n      }\n    },\n  },\n\n  methods: {\n    // When creating or editing a receiver, in both cases\n    // it is actually the one existing AlertmanagerConfig\n    // being saved. Therefore we take the save from the\n    // AlertmanagerConfig resource and pass it into the\n    // receiver config form.\n    async saveOverride(buttonDone) {\n      if (this.alertmanagerConfigResource.yamlError) {\n        this.alertmanagerConfigResource.errors = this.alertmanagerConfigResource.errors || [];\n        this.alertmanagerConfigResource.errors.push(this.alertmanagerConfigResource.yamlError);\n\n        buttonDone(false);\n\n        return;\n      }\n\n      try {\n        await this.alertmanagerConfigResource.save(...arguments);\n\n        buttonDone(true);\n\n        this.redirectToAlertmanagerConfigDetail();\n      } catch (e) {\n        const msg = e?.message ? e.message : this.t('monitoring.alertmanagerConfig.error');\n\n        this.$refs.config.setError(msg);\n        buttonDone(false);\n      }\n    },\n    handleButtonGroupClick(event) {\n      if (event === this.yaml) {\n        this.goToEditYaml(this.view);\n      }\n      if (event === this.config) {\n        this.goToEdit(this.view);\n      }\n    },\n    toggleReceiverActionMenu() {\n      this.receiverActionMenuIsOpen = !this.receiverActionMenuIsOpen;\n    },\n    handleReceiverActionMenuClick(event) {\n      this.actionMenuTargetElement = this.$refs.actions;\n      this.actionMenuTargetEvent = event;\n      this.toggleReceiverActionMenu();\n    },\n    goToEdit() {\n    // 'goToEdit' is the exact name of an action for AlertmanagerConfig\n    // and this method executes the action.\n      this.$router.push(this.alertmanagerConfigResource.getEditReceiverConfigRoute(this.receiverValue.name, _EDIT));\n    },\n    goToEditYaml() {\n    // 'goToEditYaml' is the exact name of an action for AlertmanagerConfig\n    // and this method executes the action.\n      this.$router.push(this.alertmanagerConfigResource.getEditReceiverYamlRoute(this.receiverValue.name, _EDIT));\n    },\n    promptRemove(actionData) {\n      // 'promptRemove' is the exact name of an action for AlertmanagerConfig\n      // and this method executes the action.\n      // Get the name of the receiver to delete from the action info.\n      const nameOfReceiverToDelete = actionData.route.query.receiverName;\n      // Remove it from the configuration of the parent AlertmanagerConfig\n      // resource.\n      const existingReceivers = this.alertmanagerConfigResource.spec.receivers || [];\n      const receiversMinusDeletedItem = existingReceivers.filter((receiver) => {\n        return receiver.name !== nameOfReceiverToDelete;\n      });\n\n      this.alertmanagerConfigResource.spec.receivers = receiversMinusDeletedItem;\n      // After saving the AlertmanagerConfig, the resource has been deleted.\n      this.alertmanagerConfigResource.save(...arguments);\n      this.$router.push(this.alertmanagerConfigResource._detailLocation);\n    },\n    redirectToReceiverDetail(receiverName) {\n      return this.alertmanagerConfigResource.getReceiverDetailLink(receiverName);\n    },\n    redirectToAlertmanagerConfigDetail() {\n      const route = this.alertmanagerConfigResource._detailLocation;\n\n      this.$router.push(route);\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <header class=\"header\">\n      <div class=\"title\">\n        <div class=\"primaryheader\">\n          <h1>\n            {{ heading }}\n          </h1>\n        </div>\n      </div>\n      <div class=\"actions-container\">\n        <div class=\"actions\">\n          <ButtonGroup\n            v-if=\"viewOptions && mode === view\"\n            :value=\"currentView\"\n            :options=\"viewOptions\"\n            @input=\"handleButtonGroupClick\"\n          />\n\n          <button\n            v-if=\"mode === view\"\n            ref=\"actions\"\n            aria-haspopup=\"true\"\n            type=\"button\"\n            class=\"btn role-multi-action actions\"\n            @click=\"handleReceiverActionMenuClick\"\n          >\n            <i class=\"icon icon-actions\" />\n          </button>\n        </div>\n      </div>\n    </header>\n    <ResourceYaml\n      v-if=\"currentView === yaml && alertmanagerConfigResource\"\n      ref=\"resourceyaml\"\n      :value=\"alertmanagerConfigResource\"\n      :mode=\"mode\"\n      :initial-yaml-for-diff=\"null\"\n      :yaml=\"resourceYaml\"\n      :offer-preview=\"mode === edit\"\n      :done-route=\"JSON.stringify(redirectToReceiverDetail(receiverName))\"\n      :done-override=\"alertmanagerConfigDetailRoute\"\n      :apply-hooks=\"alertmanagerConfigResource.applyHooks\"\n      @error=\"e=>$emit('error', e)\"\n    />\n    <ReceiverConfig\n      v-if=\"(currentView === config || currentView === detail) && alertmanagerConfigResource\"\n      ref=\"config\"\n      :value=\"receiverValue\"\n      :mode=\"mode\"\n      :alertmanager-config-id=\"alertmanagerConfigId\"\n      :alertmanager-config-resource=\"alertmanagerConfigResource\"\n      :save-override=\"saveOverride\"\n    />\n    <ActionMenu\n      :custom-actions=\"receiverActions\"\n      :open=\"receiverActionMenuIsOpen\"\n      :use-custom-target-element=\"true\"\n      :custom-target-element=\"actionMenuTargetElement\"\n      :custom-target-event=\"actionMenuTargetEvent\"\n      @close=\"receiverActionMenuIsOpen = false\"\n      @goToEdit=\"goToEdit\"\n      @goToEditYaml=\"goToEditYaml\"\n      @promptRemove=\"promptRemove\"\n    />\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.header{\n  H1{\n    flex: 1;\n  }\n  border-bottom: 1px solid var(--border);\n  margin-bottom: 0;\n  padding-bottom: 20px;\n}\n\n</style>\n","import mod from \"-!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../../../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./receiver.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../../../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./receiver.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./receiver.vue?vue&type=template&id=00c66b20&scoped=true&\"\nimport script from \"./receiver.vue?vue&type=script&lang=js&\"\nexport * from \"./receiver.vue?vue&type=script&lang=js&\"\nimport style0 from \"./receiver.vue?vue&type=style&index=0&id=00c66b20&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"00c66b20\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./receiver.vue?vue&type=style&index=0&id=00c66b20&prod&lang=scss&scoped=true&\""],"sourceRoot":""}