{"version":3,"sources":["webpack:///./shell/pages/c/_cluster/explorer/explorer-utils.js"],"names":["fetchClusterResources","store","type","a","opt","schema","getters","dispatch","resources","console","error"],"mappings":"wPAAO,SAAeA,EAAtB,oC,+CAAO,WAAqCC,EAAOC,GAA5C,+BAAAC,EAAA,0DAAkDC,EAAlD,+BAAwD,GACvDC,EAASJ,EAAMK,QAAQ,qBAAqBJ,IAE9CG,EAHC,0CAKuBJ,EAAMM,SAAS,kBAAmB,CAAEL,OAAME,QALjE,cAKKI,EALL,yBAOMA,GAPN,4CASDC,QAAQC,MAAR,2CAAmDR,EAAnD,sBATC,kBAWM,IAXN,iCAeE,IAfF,0D","file":"js/pages/c/_cluster/explorer/explorer-utils.fe33fb0e.js","sourcesContent":["export async function fetchClusterResources(store, type, opt = {}) {\n  const schema = store.getters['cluster/schemaFor'](type);\n\n  if (schema) {\n    try {\n      const resources = await store.dispatch('cluster/findAll', { type, opt });\n\n      return resources;\n    } catch (err) {\n      console.error(`Failed fetching cluster resource ${ type } with error:`, err); // eslint-disable-line no-console\n\n      return [];\n    }\n  }\n\n  return [];\n}\n"],"sourceRoot":""}